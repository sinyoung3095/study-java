클래스(반)

		공통 요소를 한 번만 선언해 놓고 가져다 사용만 하도록 설계한다.

		1. 타입이다.
				클래스 안에 선언된 변수와 메소드를 사용하고 싶다면,
				해당 클래스 타입으로 변수를 선언해야 한다.

		2. 주어이다.
				Monkey.eat("바나나")
				원숭이가 먹는다 바나나를.

				항상 클래스로 시작하기 때문에
				클래스는 앞글자를 대문자로 작성해야 한다.

클래스 선언

		class 클래스명{
			필드(변수, 메소드)
		}

클래스 필드 사용
		
		1. 객체화(instance) : 객체(instance variamle)을 만드는 작업, 추상적인 개념을 구체화시키는 작업.
				클래스명 객체명 = new 클래스명();
				※ .(마침표): 하위 연산자, 멤버변수 접근 연산자, 닷 연산자, 점 연산자
				주소값 뒤에서만 사용이 가능하며, 해당 주소를 참조하는 명령어이다.

		2. static : 모든 객체가 공유해야하는 필드일 경우에 사용한다.
				클래스 하나 당 한 개만 생기기 때문에 객체로 접근하지 않고 클래스로 접근한다.

생성자

		클래스 이름 뒤에 소괄호가 있는 형태, 메소드와 기능이 똑같지만 메소드라고 부르지 않는다.
		생성자는 리턴이라는 기능이 존재하지 않기 때문이다.
		
		1. 해당 클래스의 필드를 메모리에 할당한 후 부여된 주소값을 가져온다.
		2. 초기화

기본 생성자
		
		매개변수가 없는 생성자이며, 클래스 선언시 자동으로 선언된다.
		사용자가 직접 생성자를 선언하게 되면 기본 생성자는 없어진다.

this 

		필드에 접근한 객체가 누군지 알아야 해당 필드에 접근할 수 있다.
		이 때 접근한 객체가 가지고 있는 필드의 주소값이 this라는 변수에 자동으로 담긴다.

변수의 종류

		전역변수

				클래스의 필드로서, 메소드 밖에 선언하며 클래스 내에 모든 메소드에서 접근 가능하다.
				생성자를 통해 메모리에 할당되고, 객체마다 별도로 존재한다.
				즉, 전역 변수는 클래스의 구성요소로 선언된다.

		지역변수

				메소드 내부 또는{}내부에서 선언되는 변수로서,
				선언된 영역 내에서만 사용할수 있다. 해당 영역이 종료되면 사라진다.
				초기화를 하지 않으면 사용할 수 없기 때문에 반드시 직접 초기화해준다.

		정적변수(static 변수)
				
				클래스 변수라고도 하며, static키워드를 사용해준다.
				프로그램 실행시 가장 먼저 메모리에 할당되고, 단 한번만 할당된다.
				모든 객체가 공유하기 때문에 객체에
			






















